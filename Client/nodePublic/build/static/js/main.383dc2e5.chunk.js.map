{"version":3,"sources":["Results.js","Login.js","App.js","serviceWorker.js","index.js"],"names":["Results","loadingImages","url","width","img","this","Math","floor","random","length","_this$props$student","props","student","name","results","university","react_default","a","createElement","Fragment","className","style","marginBottom","src","height","alt","map","item","i","key","courseName","present","absent","late","excused","unexcused","hours","percentage","type","onClick","reset","showInfo","Component","Login","value","onChange","setUni","bind","htmlFor","updateUsername","username","autoComplete","updatePassword","password","fetchData","concat","showLoading","hidden","fontSize","marginTop","App","state","user","error","showError","_this","setState","axios","post","then","res","data","err","catch","message","event","target","closeMessage","console","log","undefined","closeInfo","src_Results","src_Login","textAlign","window","open","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.383dc2e5.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport './App.css'\n\nclass Results extends Component {\n\n    loadingImages = [\n        {\n            url: 'http://rs746.pbsrc.com/albums/xx106/Zukato-sama/1lg106Buzz.gif~c200',\n            width: 100\n        }, {\n            url: 'http://rs794.pbsrc.com/albums/yy222/toystoryftw/Misc%20Toy%20Story/1385242ovj38uen07.gif~c200',\n            width: 100\n        }, {\n            url: 'https://www.gifmania.co.uk/Walt-Disney-Animated-Gifs/Animated-Pixar-Movies/Toy-Story/Buzz-Little-Green-Men-82984.gif',\n            width: 100\n        }, {\n            url: 'https://media.giphy.com/media/MQWqYabCLWEtW/giphy.gif',\n            width: 150\n        }, {\n            url: 'https://media.giphy.com/media/rOEvmLAxxcE1i/giphy.gif',\n            width: 150\n        }, {\n            url: 'https://media.giphy.com/media/gisoxd5IYmUMM/giphy.gif',\n            width: 150\n        }, {\n            url: 'https://media.giphy.com/media/xUOwGpCYAioBj5RQQg/giphy.gif',\n            width: 180\n        }, {\n            url: 'https://media.giphy.com/media/dEdmW17JnZhiU/giphy.gif',\n            width: 180\n        }, {\n            url: 'https://media.giphy.com/media/eKDp7xvUdbCrC/giphy.gif',\n            width: 180\n        },\n    ];\n\n    img = {\n        url: '',\n        width: 100\n    };\n\n    componentWillMount() {\n        this.img = this.loadingImages[Math.floor(Math.random() * this.loadingImages.length)];\n    }\n\n    render() {\n        const {name, results, university} = this.props.student;\n\n        return (\n            <>\n                <section className=\"nes-container with-title login-container results\">\n                    <h6 className=\"title\" style={{marginBottom: 0}}>{name}</h6>\n\n                    <div className={'wrapper'}>\n                        <img\n                            src={this.img.url}\n                            width={this.img.width}\n                            height={100} alt={'gif'}/>\n                    </div>\n                    <div className=\"nes-table-responsive table\">\n                        <table className=\"nes-table is-bordered is-centered\">\n                            <thead>\n\n                            {\n                                university === \"EFFAT\" ? (\n                                    <tr>\n                                        <th style={{width: '40%'}}>Course</th>\n                                        <th>P</th>\n                                        <th>A</th>\n                                        <th>L</th>\n                                        <th>E</th>\n                                        <th>U</th>\n                                    </tr>\n                                ) : (\n                                    <tr>\n                                        <th style={{width: '40%'}}>Course</th>\n                                        <th>Hours</th>\n                                        <th>%</th>\n                                    </tr>\n                                )\n                            }\n                            </thead>\n\n                            <tbody>\n                            {\n                                university === \"EFFAT\" ?\n                                    results.map((item, i) =>\n                                        <tr key={i}>\n                                            <td>{item.courseName}</td>\n                                            <td>{item.present}</td>\n                                            <td>{item.absent}</td>\n                                            <td>{item.late}</td>\n                                            <td>{item.excused}</td>\n                                            <td>{item.unexcused}</td>\n                                        </tr>\n                                    ) :\n                                    results.map((item, i) =>\n                                        <tr key={i}>\n                                            <td>{item.courseName}</td>\n                                            <td>{item.hours}</td>\n                                            <td>{item.percentage}</td>\n                                        </tr>\n                                    )\n                            }\n                            </tbody>\n                        </table>\n                    </div>\n\n                    <div className={'wrapper results_buttons'}>\n                        <button type=\"button\" className=\"nes-btn is-primary\" onClick={this.props.reset}>Return</button>\n                        <button type=\"button\" className=\"nes-btn is-warning\" onClick={this.props.showInfo}>Info</button>\n                    </div>\n\n                </section>\n            </>\n        );\n    }\n}\n\nexport default Results;\n","import React, {Component} from 'react';\nimport './App.css'\n\nclass Login extends Component {\n    loadingImages = [\n        {\n            url: 'https://media.giphy.com/media/gx54W1mSpeYMg/giphy.gif',\n            width: 100\n        },{\n            url: 'https://media.giphy.com/media/qzPH01HCx1n8I/giphy.gif',\n            width: 100\n        },{\n            url: 'https://media.giphy.com/media/ukMiDlCmdv2og/giphy.gif',\n            width: 100\n        },{\n            url: 'https://media.giphy.com/media/K37u4P7MLoJfW/giphy.gif',\n            width: 200\n        },{\n            url: 'https://media.giphy.com/media/IPbS5R4fSUl5S/giphy.gif',\n            width: 200\n        },{\n            url: 'https://media.giphy.com/media/HPF6ivflFs7U4/giphy.gif',\n            width: 150\n        },{\n            url: 'https://media.giphy.com/media/JcZzoAcTjUZ2/giphy.gif',\n            width: 150\n        },{\n            url: 'https://media.giphy.com/media/l2Je66zG6mAAZxgqI/giphy.gif',\n            width: 150\n        },{\n            url: 'https://media.giphy.com/media/l2RbeHTkknU52SfPq/giphy.gif',\n            width: 150\n        },{\n            url: 'https://media.giphy.com/media/3oz8xOJiQ9VtnOKAIU/giphy.gif',\n            width: 150\n        },\n        // {\n        //     url: 'https://media.giphy.com/media/26AHG5KGFxSkUWw1i/giphy.gif',\n        //     width: 150\n        // },\n    ];\n\n\n    img = {\n        url: '',\n        width: 100\n    };\n\n    componentWillMount() {\n        this.img = this.loadingImages[Math.floor(Math.random() * this.loadingImages.length)];\n    }\n\n\n    render() {\n        return (\n            <>\n                <section className={`nes-container with-title login-container`}>\n                    <h2 className=\"title\">Login Page</h2>\n                    <div className=\"containers\">\n\n                        <h6>Attendance Checker Application</h6>\n                        <div className={'wrapper'}>\n                            <img src={this.img.url}\n                                 width={this.img.width}\n                                 height={90} alt={'gif'}/>\n                        </div>\n\n                        <section className=\"nes-container with-title uni\">\n                            <h2 className=\"title\">Select Uni</h2>\n                            <div>\n                                <label>\n                                    <input type=\"radio\" className=\"nes-radio\" name={'university'} value={'RCYCI'}\n                                           onChange={this.props.setUni.bind(this)}/>\n                                    <span>RCYCI</span>\n                                </label>\n                                <br/>\n                                <label>\n                                    <input type=\"radio\" className=\"nes-radio\" name={'university'} value={'EFFAT'}\n                                           onChange={this.props.setUni.bind(this)}/>\n                                    <span>Other</span>\n                                </label>\n                            </div>\n                        </section>\n\n\n                        <div className=\"nes-field\">\n                            <label htmlFor=\"name_field\">Username</label>\n                            <input type=\"text\" onChange={this.props.updateUsername} value={this.props.username}\n                                   className=\"nes-input\" autoComplete=\"off\"/>\n\n                            <label htmlFor=\"name_field\">Password</label>\n                            <input type=\"password\" onChange={this.props.updatePassword} value={this.props.password}\n                                   className=\"nes-input\" autoComplete=\"off\"/>\n                        </div>\n\n                        <br/>\n\n                        <div className={'wrapper'}>\n                            <button type=\"button\" className=\"nes-btn\" onClick={this.props.fetchData}>Login</button>\n                        </div>\n                    </div>\n                </section>\n\n                <div className={`${this.props.showLoading ? 'overlay' : ''}`}/>\n\n                <section className=\"nes-container is-rounded loading-container\" hidden={!this.props.showLoading}>\n                    <h5>Loading</h5>\n                    <img src=\"https://media.giphy.com/media/MJTOHmGiGPHgI/giphy.gif\"\n                         alt=\"\" width={160}/>\n\n                    <p style={{fontSize: '6pt', marginTop: 5}}>There is a delay in SIS usually it takes 33s to be\n                        done</p>\n                </section>\n            </>\n        );\n    }\n}\n\nexport default Login;\n","import React, {Component} from 'react';\nimport './App.css';\nimport 'nes.css/css/nes.min.css'\n\nimport axios from 'axios';\nimport Results from \"./Results\";\nimport Login from \"./Login\";\n\n\nclass App extends Component {\n\n    state = {\n        user: '',\n        password: '',\n        university: 'RCYCI',\n        showLoading: false,\n        student: false,\n        error: false,\n        showError: false,\n        showInfo: false,\n    };\n\n    fetchData = () => {\n        if (this.state.user && this.state.password && this.state.university)\n            this.setState({showLoading: true}, () => {\n                axios.post(`https://updullah.me:4000`, {\n                    user: this.state.user,\n                    password: this.state.password,\n                    university: this.state.university\n                }).then(res => {\n                    if (res.data.err)\n                        this.setState({\n                            user: '',\n                            password: '',\n                            showLoading: false,\n                            error: res.data.err,\n                            showError: true\n                        });\n                    else\n                        this.setState({\n                            user: '',\n                            password: '',\n                            showLoading: false,\n                            student: res.data.res,\n                            showError: false\n                        });\n                })\n                    .catch(res => this.setState({\n                        user: '',\n                        password: '',\n                        showLoading: false,\n                        showError: true,\n                        error: res.message || res.data.err,\n                    }));\n            });\n        else\n            this.setState({\n                showLoading: false,\n                showError: true,\n                error: \"Username & Password & University are required\",\n            })\n\n    };\n\n    updateUsername = (event) => this.setState({user: event.target.value});\n    updatePassword = (event) => this.setState({password: event.target.value});\n\n    closeMessage = () => this.setState({showError: false, error: ''});\n\n    setUni = (event) => {\n        if (event.target) {\n            console.log(event.target.value);\n            this.setState({university: event.target.value});\n        }\n    };\n\n    reset = () => this.setState({student: undefined});\n    showInfo = () => this.setState({showInfo: true});\n    closeInfo = () => this.setState({showInfo: false});\n\n    render() {\n        return (\n            <div className={`App`}>\n\n                {\n                    this.state.student ?\n                        <Results student={this.state.student}\n                                 showInfo={this.showInfo}\n                                 reset={this.reset}\n                        />\n                        : <Login updateUsername={this.updateUsername}\n                                 updatePassword={this.updatePassword}\n                                 username={this.state.user}\n                                 password={this.state.password}\n                                 setUni={this.setUni}\n                                 fetchData={this.fetchData}\n                                 showLoading={this.state.showLoading}/>\n\n                }\n\n                <div className={`nes-balloon from-right message ${this.state.showError ? '' : 'hidden'}`}>\n                    <p>\n                        {this.state.error}\n                        <br/>\n                        <img src=\"https://orig00.deviantart.net/f028/f/2014/221/5/4/signal_by_pavanz-d7uhv5q.gif\"\n                             width={80} alt={'gif'}/>\n                    </p>\n                    <div style={{textAlign: 'right'}}>\n                        <button type=\"button\" className=\"nes-btn is-error\" onClick={this.closeMessage}>X</button>\n                    </div>\n                </div>\n\n                <div className={`nes-balloon from-right infoMessage ${this.state.showInfo ? '' : 'hidden'}`}>\n                    <p>\n                        Thanks for using this app\n                        For more click on github\n                        <i className=\"nes-octocat\" onClick={() => window.open('https://github.com/sombek')}/>\n                    </p>\n\n                    <div style={{textAlign: 'right'}}>\n                        <button type=\"button\" className=\"nes-btn is-error\" onClick={this.closeInfo}>X</button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}